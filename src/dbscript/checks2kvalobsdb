#!/usr/bin/perl -w
# Kvalobs_Metadata - Free Quality Control Algorithms for Meteorological Observations 
#
# $Id: checks2kvalobsdb 27 2007-10-22 16:21:15Z paule $
#
# Copyright (C) 2007 met.no
#
# Contact information:
# Norwegian Meteorological Institute
# Box 43 Blindern
# 0313 OSLO
# NORWAY
# email: kvalobs-dev@met.no
#
# This file is part of KVALOBS_METADATA
# 
# KVALOBS_METADATA is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as 
# published by the Free Software Foundation; either version 2 
# of the License, or (at your option) any later version.
#
# KVALOBS_METADATA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along 
# with KVALOBS_METADATA; if not, write to the Free Software Foundation Inc., 
# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


use strict;
use DBI;
use trim;
use dbQC;


my $narg=@ARGV;
if( $narg == 0 ){
   print "This script checks2kvalobsdb demands one argument \n";
   exit 0;
}

my $kvpasswd=get_passwd();
my $dbh = DBI->connect('dbi:Pg:dbname=kvalobs;host=localhost;port=5432',"kvalobs",$kvpasswd,{RaiseError => 1}) ||
        die "Connect failed: $DBI::errstr";

my $control="ins";

if ( $narg > 0 ){
    my $checks_path=get_checks_path();
    my $fromfile=$checks_path . '/' . $ARGV[0];

    my $splitter='~';
    open(MYFILE,$fromfile) or die "Can't open $fromfile: $!\n";
    while( defined(my $line=<MYFILE>) ){
        $line=trim($line);

        if( length($line) > 0 ){
            my @sline=split /$splitter/,$line;
            my $len=@sline;
            #print "$sline[0] =  $len \n";
            if( $len > 1 ){
	       my $stationid=trim($sline[0]);
               my $qcx=trim($sline[1]);
               my $medium_qcx=trim($sline[2]);
               my $language=trim($sline[3]);
               my $checkname=trim($sline[4]);
	       my $checksignature=trim($sline[5]);
	       my $active=trim($sline[6]);
               my $fromtime=trim($sline[7]);
	       
	       # print "HELLO 0 $stationid,$paramid,$level,$fromday \n";

               eval{
                   if ( !insert_DB(
                       $dbh, $stationid, $qcx, $medium_qcx, $language, $checkname, 
                       $checksignature, $active, $fromtime )
                       ){
                            print "ERROR: checks2kvalobsdb::execute_program har feilet\n" ;
                        }
               }   
           }
        } 
    }  
}


sub insert_DB{
  my ( $dbh, $stationid, $qcx, $medium_qcx, $language, $checkname, $checksignature, $active, $fromtime ) = @_;

  my $sth = $dbh->prepare("SELECT language FROM checks \ 
                           WHERE stationid=$stationid AND qcx='$qcx' AND fromtime='$fromtime'");
  $sth->execute;

  my @row=();
  my @language_already=();

  while (@row = $sth->fetchrow_array) {
    push(@language_already,$row[0]);
  }
  $sth->finish;

  my $len_language=@language_already;
  print "length of language is $len_language\n";
  print "qcx=$qcx og fromtime=$fromtime\n";

  if( $len_language > 0 ){
      print "length of language is $len_language\n";
      foreach(@language_already){
	  if($_ eq $language){ 
	      if(  $control eq "ins" || $control eq 'R' ){
		  print " $qcx: Denne checken blir naa replaced\n";
		  my $sth = $dbh->prepare("UPDATE checks \
                                  SET  checkname = '$checkname',\
                                  checksignature = '$checksignature',\
                                  active         = '$active'\
                                  WHERE qcx='$qcx' AND fromtime='$fromtime'");
                  $sth->execute;
                  $sth->finish;
                  return 1;
	      }
              else{
	        print " $checkname: Dette spraaket er $_ og finnes i fra for; ingen oppdateringer \n";
	        return 1;
	      }
	  }
          else{
	      print " $checkname finnes ogsaa for spraak $_ \n";
	  }
      }
  }

  ########################

    #print " $checkname: Denne algoritmen blir naa replaced";
    #my $sth = $dbh->prepare("UPDATE algorithms \
    #                        SET  signature = '$signature', script = '$script' \
    #                        WHERE language like '$language' AND checkname like '$checkname'");
    #$sth->execute;
    #$sth->finish;




  $sth = $dbh->prepare("INSERT INTO checks VALUES($stationid,'$qcx','$medium_qcx',$language, \
                        '$checkname', '$checksignature', '$active','$fromtime')");
  $sth->execute;
  $sth->finish;

  return 1;
}
