#!/usr/bin/perl -w
# Kvalobs_Metadata - Free Quality Control Algorithms for Meteorological Observations 
#
# $Id: station_param2kvalobsdb 27 2007-10-22 16:21:15Z paule $
#
# Copyright (C) 2007 met.no
#
# Contact information:
# Norwegian Meteorological Institute
# Box 43 Blindern
# 0313 OSLO
# NORWAY
# email: kvalobs-dev@met.no
#
# This file is part of KVALOBS_METADATA
# 
# KVALOBS_METADATA is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as 
# published by the Free Software Foundation; either version 2 
# of the License, or (at your option) any later version.
#
# KVALOBS_METADATA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along 
# with KVALOBS_METADATA; if not, write to the Free Software Foundation Inc., 
# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


use strict;
use DBI;
use trim;
use dbQC;


my $narg=@ARGV;
if( $narg == 0 ){
   print "This script station_param2kvalobsdb demands one argument \n";
   exit 0;
}

my $kvpasswd=get_passwd();
my $dbh = DBI->connect('dbi:Pg:dbname=kvalobs',"kvalobs",$kvpasswd,{RaiseError => 1}) ||
        die "Connect failed: $DBI::errstr";

my $control="ins";
my $hour=-1;
my $qcx;
my $metadata;
my $desc_metadata;
my $fromtime;

my $isnonhour=0;

if ( $narg > 0 ){

    my $fromfile=$ARGV[0];
    if ( $narg > 1 ){
	$fromfile=station_param_name($ARGV[0]);
	if( $ARGV[1] eq "nonhour" ){
	    $isnonhour=1;
	}
    }
    # print "fromfile=$fromfile \n";
    my $splitter='\|';
    open(MYFILE,$fromfile) or die "Can't open $fromfile: $!\n";
    while( defined(my $line=<MYFILE>) ){
        $line=trim($line);

        if( length($line) > 0 ){
            my @sline=split /$splitter/,$line;
            my $len=@sline;
            #print "$sline[0] =  $len \n";
            if( $len > 1 ){
	       my $stationid=trim trim($sline[0]);
               my $paramid=trim($sline[1]);
               my $level=trim($sline[2]);
               my $sensor=trim($sline[3]);
               my $fromday=trim($sline[4]);
               my $today=trim($sline[5]);
               if( $isnonhour ){
                   $qcx=trim($sline[6]);
                   $metadata=trim($sline[7]);
                   $desc_metadata=trim($sline[8]);
                   $fromtime=trim($sline[9]);
	       }else{
                   $hour=trim($sline[6]);
                   $qcx=trim($sline[7]);
                   $metadata=trim($sline[8]);
                   $desc_metadata=trim($sline[9]);
                   $fromtime=trim($sline[10]);
               }

	       if ( $desc_metadata eq '\N' ){
                  $desc_metadata="";
	       }
	       #if( $stationid == 33950 ){
	       #   print "HELLO 0 $stationid,$paramid,$level,$sensor,$fromday,$today,$hour,$qcx \n";
	       #}

               eval{
                   if ( !insert_update_station_param(
			     $dbh,   $control, $stationid, $paramid,
			     $level, $sensor,  $fromday,   $today,
			     $hour,  $qcx,     $metadata,  $desc_metadata,
			     $fromtime
                          )
                       ){
                            print "ERROR: station_param2kvalobsdb::execute_program har feilet\n" ;
                        }
               }   
           }
        } 
    }  
}


sub insert_update_station_param {
    my (
        $dbh,   $control, $stationid, $paramid,
        $level, $sensor,  $fromday,   $today,
        $hour,  $qcx,     $metadata,  $desc_metadata,
        $fromtime
      )
      = @_;

    #my $metadataE="E" . "'" . $metadata . "'";
    #print "metadataE=$metadataE \n";
    #$metadata=$metadataE;

    #################
    my $sth;
    my $count;
    eval {
        $sth = $dbh->prepare(
            "SELECT count(*) FROM station_param \
                           WHERE  stationid=? AND paramid=? AND level=? AND \
                                  fromday=? AND today=? AND hour=? AND sensor=? AND \
                                  qcx=? AND fromtime=?"
        );

        $sth->execute($stationid,$paramid,$level,$fromday,$today,$hour,$sensor,$qcx,$fromtime);

        my @row = ();

        if ( @row = $sth->fetchrow_array ) {
            $count = $row[0];
        }
        $sth->finish;
    };
    warn $@ if $@;

    if ($@) { print "tt0=$@"; return 0; }

    #if(  ! defined $count ){
    #	print "not defined count: $stationid,$paramid,$level,$fromday,$today,$hour,$sensor,$qcx,$fromtime \n";
    #    ##exit 0;
    #}

    if ( $count > 0 ) {
            if ( $control eq "ins" || $control eq 'R' ) {
                    eval {
                        print
"1: $stationid, $paramid, $qcx, $metadata: Denne raden i station_param tabellen blir naa replaced \n";
                        $sth = $dbh->prepare(
                            "UPDATE station_param \
                                  SET   metadata = E'$metadata', desc_metadata = '$desc_metadata' \
                                  WHERE stationid=$stationid AND paramid=$paramid AND level=$level AND \
                                        fromday=$fromday AND today=$today AND hour=$hour AND sensor='$sensor' AND \
                                        qcx = '$qcx' AND fromtime = '$fromtime'"
                        );
                        $sth->execute;
                        $sth->finish;
                    };
                    if ($@) { print "tt=$@"; return 0; }
                    return 1;
	    }else {
                print "$stationid, $paramid, $qcx: Denne raden har verdier i fra for; ingen oppdateringer \n";
                return 1;
            }
    }else{

      #$stationid, $paramid, $level, $sensor, $fromday, $today, $qcx, $metadata, $desc_metadata, $fromtime
      print "3: $stationid, $paramid, $qcx, $metadata: denne raden blir naa lagt til \n";
      eval {
        $sth = $dbh->prepare(
        "INSERT INTO station_param VALUES('$stationid','$paramid','$level','$sensor','$fromday','$today',\
                                                  '$hour','$qcx',E'$metadata','$desc_metadata','$fromtime')"
        );
        $sth->execute;
	#    "INSERT INTO station_param VALUES(?,?,?,?,?,?,?,?,?,?,?)"
        #);
        #$sth->execute($stationid,$paramid,$level,$sensor,$fromday,$today,$hour,$qcx,"E\'$metadata\'",$desc_metadata,$fromtime);
	# Fungerer ikke - tilbake til den gode gamle ...
        $sth->finish;
    };
    if ($@) { print "tt=$@"; return 0; }
    return 1;
    }
}

